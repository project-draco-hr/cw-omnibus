{
  Request req1=new MockRequest();
  Request req2=new MockRequest();
  RequestFinishedListener listener=mock(RequestFinishedListener.class);
  Answer<NetworkResponse> delayAnswer=new Answer<NetworkResponse>(){
    @Override public NetworkResponse answer(    InvocationOnMock invocationOnMock) throws Throwable {
      Thread.sleep(20);
      return mock(NetworkResponse.class);
    }
  }
;
  when(mMockNetwork.performRequest(req1)).thenAnswer(delayAnswer);
  when(mMockNetwork.performRequest(req2)).thenReturn(mock(NetworkResponse.class));
  RequestQueue queue=new RequestQueue(new NoCache(),mMockNetwork,3,mDelivery);
  queue.addRequestFinishedListener(listener);
  queue.add(req1);
  queue.add(req2);
  queue.start();
  verifyNoMoreInteractions(listener);
  verify(listener,timeout(100)).onRequestFinished(req1);
  verify(listener,timeout(10)).onRequestFinished(req2);
  queue.stop();
}
