{
  previous=latest;
  latest=new TrafficSnapshot(this);
  latest_rx.setText(String.valueOf(latest.device.rx));
  latest_tx.setText(String.valueOf(latest.device.tx));
  if (previous != null) {
    previous_rx.setText(String.valueOf(previous.device.rx));
    previous_tx.setText(String.valueOf(previous.device.tx));
    delta_rx.setText(String.valueOf(latest.device.rx - previous.device.rx));
    delta_tx.setText(String.valueOf(latest.device.tx - previous.device.tx));
  }
  ArrayList<String> log=new ArrayList<String>();
  HashSet<Integer> intersection=new HashSet<Integer>(latest.apps.keySet());
  if (previous != null) {
    intersection.retainAll(previous.apps.keySet());
  }
  for (  Integer uid : intersection) {
    TrafficRecord latest_rec=latest.apps.get(uid);
    TrafficRecord previous_rec=(previous == null ? null : previous.apps.get(uid));
    emitLog(latest_rec.tag,latest_rec,previous_rec,log);
  }
  Collections.sort(log);
  for (  String row : log) {
    Log.d("TrafficMonitor",row);
  }
}
