{
  Option helpOpt=new Option("h","help",false,"print this message");
  Option apiKeyOpt=OptionBuilder.withArgName("key").hasArg().isRequired().withDescription("GCM API key").withLongOpt("apiKey").create('a');
  Option deviceOpt=OptionBuilder.withArgName("regId").hasArg().isRequired().withDescription("device to send to").withLongOpt("device").create('d');
  Option dataOpt=OptionBuilder.withArgName("key=value").hasArgs(2).withDescription("datum to send").withValueSeparator().withLongOpt("data").create('D');
  Options options=new Options();
  options.addOption(apiKeyOpt);
  options.addOption(deviceOpt);
  options.addOption(dataOpt);
  options.addOption(helpOpt);
  CommandLineParser parser=new PosixParser();
  try {
    CommandLine line=parser.parse(options,args);
    if (line.hasOption('h') || !line.hasOption('a') || !line.hasOption('d')) {
      HelpFormatter formatter=new HelpFormatter();
      formatter.printHelp("gcm",options,true);
    }
 else {
      sendMessage(line.getOptionValue('a'),Arrays.asList(line.getOptionValues('d')),line.getOptionProperties("data"));
    }
  }
 catch (  org.apache.commons.cli.MissingOptionException moe) {
    System.err.println("Invalid command syntax");
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("gcm",options,true);
  }
catch (  Exception e) {
    e.printStackTrace();
  }
}
