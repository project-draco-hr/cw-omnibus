{
  expectNearNumber(SphericalUtil.computeAngleBetween(up,up),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(down,down),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(left,left),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(right,right),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(front,front),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(back,back),0,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(up,front),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(up,right),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(up,back),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(up,left),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(down,front),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(down,right),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(down,back),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(down,left),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(back,up),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(back,right),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(back,down),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(back,left),Math.PI / 2,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(up,down),Math.PI,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(front,back),Math.PI,1e-6);
  expectNearNumber(SphericalUtil.computeAngleBetween(left,right),Math.PI,1e-6);
}
