{
  boolean succeeded=false;
  try {
    File root=Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
    root.mkdirs();
    File output=new File(root,Uri.parse(url).getLastPathSegment());
    if (output.exists()) {
      output.delete();
    }
    HttpURLConnection c=(HttpURLConnection)new URL(url).openConnection();
    FileOutputStream fos=new FileOutputStream(output.getPath());
    BufferedOutputStream out=new BufferedOutputStream(fos);
    try {
      InputStream in=c.getInputStream();
      byte[] buffer=new byte[8192];
      int len=0;
      while ((len=in.read(buffer)) >= 0) {
        out.write(buffer,0,len);
      }
      out.flush();
      succeeded=true;
    }
  finally {
      fos.getFD().sync();
      out.close();
      c.disconnect();
    }
  }
 catch (  IOException e2) {
    Log.e("DownloadJob","Exception in download",e2);
    try {
      cb.onFailure(e2.getMessage());
    }
 catch (    RemoteException e) {
      Log.e("DownloadJob","Exception when calling onFailure()",e2);
    }
  }
  if (succeeded) {
    try {
      cb.onSuccess();
    }
 catch (    RemoteException e) {
      Log.e("DownloadJob","Exception when calling onSuccess()",e);
    }
  }
}
