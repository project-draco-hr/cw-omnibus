{
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
  while (true) {
    long startTimeMs=SystemClock.elapsedRealtime();
    Request<?> request;
    try {
      request=mQueue.take();
    }
 catch (    InterruptedException e) {
      if (mQuit) {
        return;
      }
      continue;
    }
    try {
      request.addMarker("network-queue-take");
      if (request.isCanceled()) {
        request.finish("network-discard-cancelled");
        continue;
      }
      addTrafficStatsTag(request);
      NetworkResponse networkResponse=mNetwork.performRequest(request);
      request.addMarker("network-http-complete");
      if (networkResponse.notModified && request.hasHadResponseDelivered()) {
        request.finish("not-modified");
        continue;
      }
      Response<?> response=request.parseNetworkResponse(networkResponse);
      request.addMarker("network-parse-complete");
      if (request.shouldCache() && response.cacheEntry != null) {
        mCache.put(request.getCacheKey(),response.cacheEntry);
        request.addMarker("network-cache-written");
      }
      request.markDelivered();
      mDelivery.postResponse(request,response);
    }
 catch (    VolleyError volleyError) {
      volleyError.setNetworkTimeMs(SystemClock.elapsedRealtime() - startTimeMs);
      parseAndDeliverNetworkError(request,volleyError);
    }
catch (    Exception e) {
      VolleyLog.e(e,"Unhandled exception %s",e.toString());
      VolleyError volleyError=new VolleyError(e);
      volleyError.setNetworkTimeMs(SystemClock.elapsedRealtime() - startTimeMs);
      mDelivery.postError(request,volleyError);
    }
  }
}
