{
  heading=toRadians(heading);
  distance/=EARTH_RADIUS;
  double n1=cos(distance);
  double n2=sin(distance) * cos(heading);
  double n3=sin(distance) * sin(heading);
  double n4=sin(toRadians(to.latitude));
  double n12=n1 * n1;
  double discriminant=n2 * n2 * n12 + n12 * n12 - n12 * n4 * n4;
  if (discriminant < 0) {
    return null;
  }
  double b=n2 * n4 + sqrt(discriminant);
  b/=n1 * n1 + n2 * n2;
  double a=(n4 - n2 * b) / n1;
  double fromLatRadians=atan2(a,b);
  if (fromLatRadians < -PI / 2 || fromLatRadians > PI / 2) {
    b=n2 * n4 - sqrt(discriminant);
    b/=n1 * n1 + n2 * n2;
    fromLatRadians=atan2(a,b);
  }
  if (fromLatRadians < -PI / 2 || fromLatRadians > PI / 2) {
    return null;
  }
  double fromLngRadians=toRadians(to.longitude) - atan2(n3,n1 * cos(fromLatRadians) - n2 * sin(fromLatRadians));
  return new LatLng(toDegrees(fromLatRadians),toDegrees(fromLngRadians));
}
