{
  String url=request.getUrl();
  HashMap<String,String> map=new HashMap<String,String>();
  map.putAll(request.getHeaders());
  map.putAll(additionalHeaders);
  if (mUrlRewriter != null) {
    String rewritten=mUrlRewriter.rewriteUrl(url);
    if (rewritten == null) {
      throw new IOException("URL blocked by rewriter: " + url);
    }
    url=rewritten;
  }
  URL parsedUrl=new URL(url);
  HttpURLConnection connection=openConnection(parsedUrl,request);
  for (  String headerName : map.keySet()) {
    connection.addRequestProperty(headerName,map.get(headerName));
  }
  setConnectionParametersForRequest(connection,request);
  ProtocolVersion protocolVersion=new ProtocolVersion("HTTP",1,1);
  int responseCode=connection.getResponseCode();
  if (responseCode == -1) {
    throw new IOException("Could not retrieve response code from HttpUrlConnection.");
  }
  StatusLine responseStatus=new BasicStatusLine(protocolVersion,connection.getResponseCode(),connection.getResponseMessage());
  BasicHttpResponse response=new BasicHttpResponse(responseStatus);
  if (hasResponseBody(request.getMethod(),responseStatus.getStatusCode())) {
    response.setEntity(entityFromConnection(connection));
  }
  for (  Entry<String,List<String>> header : connection.getHeaderFields().entrySet()) {
    if (header.getKey() != null) {
      Header h=new BasicHeader(header.getKey(),header.getValue().get(0));
      response.addHeader(h);
    }
  }
  return response;
}
