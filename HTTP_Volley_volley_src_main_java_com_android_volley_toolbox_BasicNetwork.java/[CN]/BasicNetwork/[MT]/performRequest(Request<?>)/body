{
  long requestStart=SystemClock.elapsedRealtime();
  while (true) {
    HttpResponse httpResponse=null;
    byte[] responseContents=null;
    Map<String,String> responseHeaders=Collections.emptyMap();
    try {
      Map<String,String> headers=new HashMap<String,String>();
      addCacheHeaders(headers,request.getCacheEntry());
      httpResponse=mHttpStack.performRequest(request,headers);
      StatusLine statusLine=httpResponse.getStatusLine();
      int statusCode=statusLine.getStatusCode();
      responseHeaders=convertHeaders(httpResponse.getAllHeaders());
      if (statusCode == HttpStatus.SC_NOT_MODIFIED) {
        Entry entry=request.getCacheEntry();
        if (entry == null) {
          return new NetworkResponse(HttpStatus.SC_NOT_MODIFIED,null,responseHeaders,true,SystemClock.elapsedRealtime() - requestStart);
        }
        entry.responseHeaders.putAll(responseHeaders);
        return new NetworkResponse(HttpStatus.SC_NOT_MODIFIED,entry.data,entry.responseHeaders,true,SystemClock.elapsedRealtime() - requestStart);
      }
      if (httpResponse.getEntity() != null) {
        responseContents=entityToBytes(httpResponse.getEntity());
      }
 else {
        responseContents=new byte[0];
      }
      long requestLifetime=SystemClock.elapsedRealtime() - requestStart;
      logSlowRequests(requestLifetime,request,responseContents,statusLine);
      if (statusCode < 200 || statusCode > 299) {
        throw new IOException();
      }
      return new NetworkResponse(statusCode,responseContents,responseHeaders,false,SystemClock.elapsedRealtime() - requestStart);
    }
 catch (    SocketTimeoutException e) {
      attemptRetryOnException("socket",request,new TimeoutError());
    }
catch (    ConnectTimeoutException e) {
      attemptRetryOnException("connection",request,new TimeoutError());
    }
catch (    MalformedURLException e) {
      throw new RuntimeException("Bad URL " + request.getUrl(),e);
    }
catch (    IOException e) {
      int statusCode=0;
      NetworkResponse networkResponse=null;
      if (httpResponse != null) {
        statusCode=httpResponse.getStatusLine().getStatusCode();
      }
 else {
        throw new NoConnectionError(e);
      }
      VolleyLog.e("Unexpected response code %d for %s",statusCode,request.getUrl());
      if (responseContents != null) {
        networkResponse=new NetworkResponse(statusCode,responseContents,responseHeaders,false,SystemClock.elapsedRealtime() - requestStart);
        if (statusCode == HttpStatus.SC_UNAUTHORIZED || statusCode == HttpStatus.SC_FORBIDDEN) {
          attemptRetryOnException("auth",request,new AuthFailureError(networkResponse));
        }
 else {
          throw new ServerError(networkResponse);
        }
      }
 else {
        throw new NetworkError(networkResponse);
      }
    }
  }
}
